pub const FONT_5X6_WIDTH: usize = 5;
pub const FONT_5X6: [u8; 480] = [
    0x00, 0x00, 0x00, 0x00, 0x00, //
    0x00, 0x00, 0x5E, 0x00, 0x00, // !
    0x00, 0x06, 0x00, 0x06, 0x00, // "
    0x28, 0x7C, 0x28, 0x7C, 0x28, // #
    0x08, 0x54, 0x7E, 0x54, 0x20, // $
    0x44, 0x20, 0x10, 0x08, 0x44, // %
    0x28, 0x54, 0x54, 0x20, 0x50, // &
    0x00, 0x00, 0x06, 0x00, 0x00, // '
    0x00, 0x18, 0x24, 0x42, 0x00, // (
    0x00, 0x42, 0x24, 0x18, 0x00, // )
    0x28, 0x10, 0x7C, 0x10, 0x28, // *
    0x00, 0x10, 0x38, 0x10, 0x00, // +
    0x00, 0x40, 0x20, 0x00, 0x00, // ,
    0x00, 0x10, 0x10, 0x10, 0x00, // -
    0x00, 0x00, 0x40, 0x00, 0x00, // .
    0x00, 0x60, 0x18, 0x06, 0x00, // /
    0x3C, 0x42, 0x5A, 0x42, 0x3C, // 0
    0x00, 0x44, 0x7E, 0x40, 0x00, // 1
    0x44, 0x62, 0x52, 0x4A, 0x44, // 2
    0x24, 0x42, 0x4A, 0x4A, 0x34, // 3
    0x30, 0x28, 0x24, 0x7E, 0x20, // 4
    0x2E, 0x4A, 0x4A, 0x4A, 0x32, // 5
    0x3C, 0x4A, 0x4A, 0x4A, 0x30, // 6
    0x42, 0x22, 0x12, 0x0A, 0x06, // 7
    0x34, 0x4A, 0x4A, 0x4A, 0x34, // 8
    0x0C, 0x52, 0x52, 0x52, 0x3C, // 9
    0x00, 0x00, 0x28, 0x00, 0x00, // :
    0x00, 0x40, 0x28, 0x00, 0x00, // ;
    0x00, 0x10, 0x28, 0x44, 0x00, // <
    0x00, 0x28, 0x28, 0x28, 0x00, // =
    0x00, 0x44, 0x28, 0x10, 0x00, // >
    0x04, 0x02, 0x52, 0x0A, 0x04, // ?
    0x3C, 0x42, 0x5A, 0x52, 0x0C, // @
    0x7C, 0x12, 0x12, 0x12, 0x7C, // A
    0x7C, 0x4A, 0x4A, 0x4A, 0x34, // B
    0x3C, 0x42, 0x42, 0x42, 0x24, // C
    0x7E, 0x42, 0x42, 0x42, 0x3C, // D
    0x7E, 0x4A, 0x4A, 0x4A, 0x42, // E
    0x7E, 0x0A, 0x0A, 0x0A, 0x02, // F
    0x3C, 0x42, 0x42, 0x52, 0x34, // G
    0x7E, 0x10, 0x10, 0x10, 0x7E, // H
    0x42, 0x42, 0x7E, 0x42, 0x42, // I
    0x22, 0x42, 0x42, 0x3E, 0x02, // J
    0x7E, 0x08, 0x08, 0x14, 0x62, // K
    0x7E, 0x40, 0x40, 0x40, 0x40, // L
    0x7E, 0x04, 0x08, 0x04, 0x7E, // M
    0x7E, 0x04, 0x08, 0x10, 0x7E, // N
    0x3C, 0x42, 0x42, 0x42, 0x3C, // O
    0x7E, 0x12, 0x12, 0x12, 0x0C, // P
    0x3C, 0x42, 0x52, 0x22, 0x5C, // Q
    0x7E, 0x12, 0x12, 0x12, 0x6C, // R
    0x24, 0x4A, 0x4A, 0x4A, 0x30, // S
    0x02, 0x02, 0x7E, 0x02, 0x02, // T
    0x3E, 0x40, 0x40, 0x40, 0x3E, // U
    0x0E, 0x30, 0x40, 0x30, 0x0E, // V
    0x3E, 0x40, 0x30, 0x40, 0x3E, // W
    0x62, 0x14, 0x08, 0x14, 0x62, // X
    0x02, 0x04, 0x68, 0x18, 0x06, // Y
    0x62, 0x52, 0x4A, 0x46, 0x42, // Z
    0x00, 0x7E, 0x42, 0x42, 0x00, // [
    0x00, 0x06, 0x18, 0x60, 0x00, // \
    0x00, 0x42, 0x42, 0x7E, 0x00, // ]
    0x08, 0x04, 0x02, 0x04, 0x08, // ^
    0x40, 0x40, 0x40, 0x40, 0x40, // _
    0x00, 0x00, 0x02, 0x04, 0x00, // `
    0x38, 0x44, 0x44, 0x24, 0x78, // a
    0x7E, 0x48, 0x48, 0x48, 0x30, // b
    0x38, 0x44, 0x44, 0x44, 0x28, // c
    0x30, 0x48, 0x48, 0x48, 0x7E, // d
    0x38, 0x54, 0x54, 0x54, 0x08, // e
    0x7C, 0x12, 0x12, 0x02, 0x04, // f
    0x08, 0x54, 0x54, 0x54, 0x38, // g
    0x7E, 0x08, 0x08, 0x08, 0x70, // h
    0x00, 0x48, 0x7A, 0x40, 0x00, // i
    0x20, 0x40, 0x40, 0x3A, 0x00, // j
    0x7E, 0x08, 0x08, 0x14, 0x60, // k
    0x00, 0x02, 0x3E, 0x40, 0x40, // l
    0x7C, 0x04, 0x78, 0x04, 0x78, // m
    0x7C, 0x04, 0x04, 0x04, 0x78, // n
    0x38, 0x44, 0x44, 0x44, 0x38, // o
    0x78, 0x14, 0x14, 0x14, 0x08, // p
    0x08, 0x14, 0x14, 0x14, 0x78, // q
    0x7C, 0x08, 0x04, 0x04, 0x08, // r
    0x08, 0x54, 0x54, 0x54, 0x20, // s
    0x00, 0x08, 0x7E, 0x08, 0x00, // t
    0x3C, 0x40, 0x40, 0x20, 0x7C, // u
    0x1C, 0x20, 0x40, 0x20, 0x1C, // v
    0x3C, 0x40, 0x20, 0x40, 0x3C, // w
    0x44, 0x28, 0x10, 0x28, 0x44, // x
    0x0C, 0x50, 0x50, 0x50, 0x3C, // y
    0x44, 0x64, 0x54, 0x4C, 0x44, // z
    0x00, 0x24, 0x5A, 0x42, 0x00, // {
    0x00, 0x00, 0x7E, 0x00, 0x00, // |
    0x00, 0x42, 0x5A, 0x24, 0x00, // }
    0x04, 0x02, 0x04, 0x08, 0x04, // ~
    0x00, 0x00, 0x00, 0x00, 0x00, // 
];

pub const FONT_5: [(u8, [u8; 5]); 96] = [
    (3, [0, 0, 0, 0, 0]),      //
    (1, [23, 0, 0, 0, 0]),     // !
    (3, [3, 0, 3, 0, 0]),      // "
    (5, [10, 31, 10, 31, 10]), // #
    (5, [2, 21, 31, 21, 8]),   // $
    (5, [17, 8, 4, 2, 17]),    // %
    (5, [10, 21, 21, 8, 20]),  // &
    (1, [3, 0, 0, 0, 0]),      // '
    (2, [14, 17, 0, 0, 0]),    // (
    (2, [17, 14, 0, 0, 0]),    // )
    (5, [10, 4, 31, 4, 10]),   // *
    (3, [4, 14, 4, 0, 0]),     // +
    (2, [16, 8, 0, 0, 0]),     // ,
    (3, [4, 4, 4, 0, 0]),      // -
    (1, [16, 0, 0, 0, 0]),     // .
    (5, [16, 8, 4, 2, 1]),     // /
    (5, [14, 17, 21, 17, 14]), // 0
    (3, [18, 31, 16, 0, 0]),   // 1
    (5, [18, 17, 25, 21, 18]), // 2
    (5, [10, 17, 21, 21, 10]), // 3
    (5, [12, 10, 9, 31, 8]),   // 4
    (5, [23, 21, 21, 21, 8]),  // 5
    (5, [14, 21, 21, 21, 8]),  // 6
    (4, [17, 9, 5, 3, 0]),     // 7
    (5, [10, 21, 21, 21, 10]), // 8
    (5, [2, 21, 21, 21, 14]),  // 9
    (1, [10, 0, 0, 0, 0]),     // :
    (2, [16, 10, 0, 0, 0]),    // ;
    (3, [4, 10, 17, 0, 0]),    // <
    (3, [10, 10, 10, 0, 0]),   // =
    (3, [17, 10, 4, 0, 0]),    // >
    (5, [2, 1, 21, 5, 2]),     // ?
    (4, [14, 17, 21, 22, 0]),  // @
    (4, [31, 5, 5, 31, 0]),    // A
    (4, [31, 21, 21, 10, 0]),  // B
    (4, [14, 17, 17, 10, 0]),  // C
    (4, [31, 17, 17, 14, 0]),  // D
    (4, [31, 21, 21, 17, 0]),  // E
    (4, [31, 5, 5, 1, 0]),     // F
    (4, [14, 17, 21, 13, 0]),  // G
    (4, [31, 4, 4, 31, 0]),    // H
    (3, [17, 31, 17, 0, 0]),   // I
    (4, [9, 17, 31, 1, 0]),    // J
    (4, [31, 4, 10, 17, 0]),   // K
    (3, [31, 16, 16, 0, 0]),   // L
    (5, [31, 2, 12, 2, 31]),   // M
    (5, [31, 2, 4, 8, 31]),    // N
    (4, [14, 17, 17, 14, 0]),  // O
    (4, [31, 5, 5, 2, 0]),     // P
    (5, [14, 17, 21, 25, 14]), // Q
    (5, [31, 5, 5, 13, 18]),   // R
    (4, [18, 21, 21, 9, 0]),   // S
    (5, [1, 1, 31, 1, 1]),     // T
    (4, [15, 16, 16, 15, 0]),  // U
    (5, [3, 12, 16, 12, 3]),   // V
    (5, [15, 16, 12, 16, 15]), // W
    (5, [17, 10, 4, 10, 17]),  // X
    (5, [1, 2, 28, 2, 1]),     // Y
    (5, [17, 25, 21, 19, 17]), // Z
    (2, [31, 17, 0, 0, 0]),    // [
    (5, [1, 2, 4, 8, 16]),     // \
    (2, [17, 31, 0, 0, 0]),    // ]
    (3, [2, 1, 2, 0, 0]),      // ^
    (4, [16, 16, 16, 16, 0]),  // _
    (2, [1, 2, 0, 0, 0]),      // `
    (0, [0, 0, 0, 0, 0]),      // a
    (0, [0, 0, 0, 0, 0]),      // b
    (0, [0, 0, 0, 0, 0]),      // c
    (0, [0, 0, 0, 0, 0]),      // d
    (0, [0, 0, 0, 0, 0]),      // e
    (0, [0, 0, 0, 0, 0]),      // f
    (0, [0, 0, 0, 0, 0]),      // g
    (0, [0, 0, 0, 0, 0]),      // h
    (0, [0, 0, 0, 0, 0]),      // i
    (0, [0, 0, 0, 0, 0]),      // j
    (0, [0, 0, 0, 0, 0]),      // k
    (0, [0, 0, 0, 0, 0]),      // l
    (0, [0, 0, 0, 0, 0]),      // m
    (0, [0, 0, 0, 0, 0]),      // n
    (0, [0, 0, 0, 0, 0]),      // o
    (0, [0, 0, 0, 0, 0]),      // p
    (0, [0, 0, 0, 0, 0]),      // q
    (0, [0, 0, 0, 0, 0]),      // r
    (0, [0, 0, 0, 0, 0]),      // s
    (0, [0, 0, 0, 0, 0]),      // t
    (0, [0, 0, 0, 0, 0]),      // u
    (0, [0, 0, 0, 0, 0]),      // v
    (0, [0, 0, 0, 0, 0]),      // w
    (0, [0, 0, 0, 0, 0]),      // x
    (0, [0, 0, 0, 0, 0]),      // y
    (0, [0, 0, 0, 0, 0]),      // z
    (3, [10, 21, 17, 0, 0]),   // {
    (1, [31, 0, 0, 0, 0]),     // |
    (3, [17, 21, 10, 0, 0]),   // }
    (4, [2, 1, 2, 1, 0]),      // ~
    (0, [0, 0, 0, 0, 0]),      // 
];
